#include "TestProd.fcl"
#include "services_refactored_pdune.fcl"
process_name: Test


services:
{
  message:      @local::standard_info
  @table::protodune_larg4_services
  @table::protodune_refactored_simulation_services
}

source: {
   module_type: RootInput
   maxEvents:   100         # Number of events to create
   firstRun:    1           # Run number to use for this file
   firstEvent:  1           # number of first event in the file
}

physics:
{

 producers: { 
   test: @local::testprod 
 }

 analyzers:
 { }
 
 ana:  [ ]

 simulate: [ test ]
 stream1: [ out1 ]
 
 trigger_paths: [ simulate ]
 end_paths:     [ stream1 ]

}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "%ifb_testphot.root"
    dataTier:    "simulated"
    #outputCommands: [ "keep *" ]
    outputCommands: [ "keep *", "drop sim::SimEnergyDeposits_largeant_*_G4"]
    #fastCloning: false #will fail if the split level is not the same as for the gen stage, so turn it off
    compressionLevel: 1 #zlib argument (0-9) 
    #basketSize: 8192 #[Byte] buffer size at 8k
    #splitLevel: 0 #reduces number of buffers
    #treeMaxVirtualSize: 1 #[Byte] limits number of buffers/branch to 1 (default is 10)
  }
}


